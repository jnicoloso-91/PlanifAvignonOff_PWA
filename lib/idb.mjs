/* esm.sh - idb@7.1.1 */
var M=(e,n)=>n.some(t=>e instanceof t),l,y;function L(){return l||(l=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function g(){return y||(y=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}var I=new WeakMap,D=new WeakMap,B=new WeakMap,h=new WeakMap,p=new WeakMap;function P(e){let n=new Promise((t,r)=>{let i=()=>{e.removeEventListener("success",a),e.removeEventListener("error",o)},a=()=>{t(c(e.result)),i()},o=()=>{r(e.error),i()};e.addEventListener("success",a),e.addEventListener("error",o)});return n.then(t=>{t instanceof IDBCursor&&I.set(t,e)}).catch(()=>{}),p.set(n,e),n}function T(e){if(D.has(e))return;let n=new Promise((t,r)=>{let i=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",o),e.removeEventListener("abort",o)},a=()=>{t(),i()},o=()=>{r(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",a),e.addEventListener("error",o),e.addEventListener("abort",o)});D.set(e,n)}var m={get(e,n,t){if(e instanceof IDBTransaction){if(n==="done")return D.get(e);if(n==="objectStoreNames")return e.objectStoreNames||B.get(e);if(n==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return c(e[n])},set(e,n,t){return e[n]=t,!0},has(e,n){return e instanceof IDBTransaction&&(n==="done"||n==="store")?!0:n in e}};function b(e){m=e(m)}function x(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(n,...t){let r=e.call(f(this),n,...t);return B.set(r,n.sort?n.sort():[n]),c(r)}:g().includes(e)?function(...n){return e.apply(f(this),n),c(I.get(this))}:function(...n){return c(e.apply(f(this),n))}}function C(e){return typeof e=="function"?x(e):(e instanceof IDBTransaction&&T(e),M(e,L())?new Proxy(e,m):e)}function c(e){if(e instanceof IDBRequest)return P(e);if(h.has(e))return h.get(e);let n=C(e);return n!==e&&(h.set(e,n),p.set(n,e)),n}var f=e=>p.get(e);function W(e,n,{blocked:t,upgrade:r,blocking:i,terminated:a}={}){let o=indexedDB.open(e,n),u=c(o);return r&&o.addEventListener("upgradeneeded",s=>{r(c(o.result),s.oldVersion,s.newVersion,c(o.transaction),s)}),t&&o.addEventListener("blocked",s=>t(s.oldVersion,s.newVersion,s)),u.then(s=>{a&&s.addEventListener("close",()=>a()),i&&s.addEventListener("versionchange",d=>i(d.oldVersion,d.newVersion,d))}).catch(()=>{}),u}function k(e,{blocked:n}={}){let t=indexedDB.deleteDatabase(e);return n&&t.addEventListener("blocked",r=>n(r.oldVersion,r)),c(t).then(()=>{})}var S=["get","getKey","getAll","getAllKeys","count"],V=["put","add","delete","clear"],w=new Map;function E(e,n){if(!(e instanceof IDBDatabase&&!(n in e)&&typeof n=="string"))return;if(w.get(n))return w.get(n);let t=n.replace(/FromIndex$/,""),r=n!==t,i=V.includes(t);if(!(t in(r?IDBIndex:IDBObjectStore).prototype)||!(i||S.includes(t)))return;let a=async function(o,...u){let s=this.transaction(o,i?"readwrite":"readonly"),d=s.store;return r&&(d=d.index(u.shift())),(await Promise.all([d[t](...u),i&&s.done]))[0]};return w.set(n,a),a}b(e=>({...e,get:(n,t,r)=>E(n,t)||e.get(n,t,r),has:(n,t)=>!!E(n,t)||e.has(n,t)}));export{k as deleteDB,W as openDB,f as unwrap,c as wrap};
//# sourceMappingURL=idb.bundle.mjs.map